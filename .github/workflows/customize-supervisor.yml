name: Customize Home Assistant Supervisor

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to use (e.g., 2025.05.5)'
        required: true
        default: '2025.05.5'

jobs:
  customize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git credentials
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Define branch name
        id: branch_name
        run: |
          TAG=${{ github.event.inputs.tag }}
          BRANCH="ihost-$TAG"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Check if branch exists
        id: branch_check
        continue-on-error: true
        run: |
          echo "Checking for branch ${{ steps.branch_name.outputs.branch }} in origin..."
          RESULT=$(git ls-remote --heads origin ${{ steps.branch_name.outputs.branch }})
          if [ -z "$RESULT" ]; then
            echo "Branch does not exist"
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "Branch exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Fail if branch exists
        if: steps.branch_check.outputs.exists == 'true'
        run: |
          echo "Error: Branch ${{ steps.branch_name.outputs.branch }} already exists in the repository."
          exit 1

      - name: Add & fetch upstream remote
        run: |
          git remote add upstream https://github.com/home-assistant/supervisor.git
          git fetch upstream tag ${{ github.event.inputs.tag }}

      - name: Create and checkout new branch
        run: |
          TAG=${{ github.event.inputs.tag }}
          BRANCH="ihost-$TAG"
          git checkout -b $BRANCH $TAG

      - name: Modify supervisor/const.py
        run: |
          TAG=${{ github.event.inputs.tag }}
          sed -i "s|SUPERVISOR_VERSION = \".*\"|SUPERVISOR_VERSION = \"$TAG\"|" ./supervisor/const.py
          sed -i "s|URL_HASSIO_VERSION = \".*\"|URL_HASSIO_VERSION = \"https://raw.githubusercontent.com/iHost-Open-Source-Project/haos-version/main/{channel}.json\"|" ./supervisor/const.py

      - name: Modify Dockerfile with labels
        run: |
          TAG=${{ github.event.inputs.tag }}
          DATE=$(date -u +"%Y-%m-%d %H:%M:%S%z")
          
          echo "LABEL io.hass.arch=\"armv7\" \\" >> ./Dockerfile
          echo "      io.hass.base.arch=\"armv7\" \\" >> ./Dockerfile
          echo "      io.hass.base.image=\"ghcr.io/home-assistant/armv7-base:3.21\" \\" >> ./Dockerfile
          echo "      io.hass.base.name=\"python\" \\" >> ./Dockerfile
          echo "      io.hass.base.version=\"2025.05.0\" \\" >> ./Dockerfile
          echo "      io.hass.type=\"supervisor\" \\" >> ./Dockerfile
          echo "      io.hass.version=\"$TAG\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.authors=\"The Home Assistant Authors\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.created=\"$DATE\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.description=\"Container-based system for managing Home Assistant Core installation\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.documentation=\"https://www.home-assistant.io/docs/\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.licenses=\"Apache License 2.0\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.source=\"https://github.com/home-assistant/supervisor\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.title=\"Home Assistant Supervisor\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.url=\"https://www.home-assistant.io/\" \\" >> ./Dockerfile
          echo "      org.opencontainers.image.version=\"$TAG\"" >> ./Dockerfile

      - name: Commit changes (exclude workflows)
        run: |
          git add ./supervisor/const.py ./Dockerfile
          # 排除工作流文件
          rm -rf .github/workflows
          git commit -m "Customize for iHost with tag ${{ github.event.inputs.tag }}"

      - name: Push branch to origin
        run: |
          git push origin ${{ steps.branch_name.outputs.branch }}